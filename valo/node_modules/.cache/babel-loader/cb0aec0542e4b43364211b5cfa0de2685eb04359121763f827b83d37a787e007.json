{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kusha\\\\valorant\\\\valo\\\\src\\\\TeamForm.js\",\n  _s = $RefreshSig$();\n// src/TeamForm.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamForm = () => {\n  _s();\n  const [team1Players, setTeam1Players] = useState(Array(5).fill(''));\n  const [team2Players, setTeam2Players] = useState(Array(5).fill(''));\n  const [winner, setWinner] = useState(null);\n  const handleChange = (team, index, value) => {\n    if (team === 1) {\n      const newPlayers = [...team1Players];\n      newPlayers[index] = value;\n      setTeam1Players(newPlayers);\n    } else {\n      const newPlayers = [...team2Players];\n      newPlayers[index] = value;\n      setTeam2Players(newPlayers);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = {\n      team1: team1Players.map(Number),\n      team2: team2Players.map(Number)\n    };\n    try {\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n      setWinner(result.winner);\n    } catch (error) {\n      console.error('Error predicting the winner:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Player IDs Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Team 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), team1Players.map((player, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: player,\n        onChange: e => handleChange(1, index, e.target.value),\n        placeholder: `Player ${index + 1} ID`\n      }, `team1-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Team 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), team2Players.map((player, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: player,\n        onChange: e => handleChange(2, index, e.target.value),\n        placeholder: `Player ${index + 1} ID`\n      }, `team2-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Predict Winner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"The predicted winner is: \", winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamForm, \"CQgNJpK5lqQm0Kbb5ufPbmkSMig=\");\n_c = TeamForm;\nexport default TeamForm;\nvar _c;\n$RefreshReg$(_c, \"TeamForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TeamForm","_s","team1Players","setTeam1Players","Array","fill","team2Players","setTeam2Players","winner","setWinner","handleChange","team","index","value","newPlayers","handleSubmit","e","preventDefault","data","team1","map","Number","team2","response","fetch","method","headers","body","JSON","stringify","result","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","player","type","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/kusha/valorant/valo/src/TeamForm.js"],"sourcesContent":["// src/TeamForm.js\r\nimport React, { useState } from 'react';\r\n\r\nconst TeamForm = () => {\r\n  const [team1Players, setTeam1Players] = useState(Array(5).fill(''));\r\n  const [team2Players, setTeam2Players] = useState(Array(5).fill(''));\r\n  const [winner, setWinner] = useState(null);\r\n\r\n  const handleChange = (team, index, value) => {\r\n    if (team === 1) {\r\n      const newPlayers = [...team1Players];\r\n      newPlayers[index] = value;\r\n      setTeam1Players(newPlayers);\r\n    } else {\r\n      const newPlayers = [...team2Players];\r\n      newPlayers[index] = value;\r\n      setTeam2Players(newPlayers);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      team1: team1Players.map(Number),\r\n      team2: team2Players.map(Number),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/predict', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const result = await response.json();\r\n      setWinner(result.winner);\r\n    } catch (error) {\r\n      console.error('Error predicting the winner:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Player IDs Input</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <h3>Team 1</h3>\r\n        {team1Players.map((player, index) => (\r\n          <input\r\n            key={`team1-${index}`}\r\n            type=\"number\"\r\n            value={player}\r\n            onChange={(e) => handleChange(1, index, e.target.value)}\r\n            placeholder={`Player ${index + 1} ID`}\r\n          />\r\n        ))}\r\n        <h3>Team 2</h3>\r\n        {team2Players.map((player, index) => (\r\n          <input\r\n            key={`team2-${index}`}\r\n            type=\"number\"\r\n            value={player}\r\n            onChange={(e) => handleChange(2, index, e.target.value)}\r\n            placeholder={`Player ${index + 1} ID`}\r\n          />\r\n        ))}\r\n        <button type=\"submit\">Predict Winner</button>\r\n      </form>\r\n      {winner && <h3>The predicted winner is: {winner}</h3>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}